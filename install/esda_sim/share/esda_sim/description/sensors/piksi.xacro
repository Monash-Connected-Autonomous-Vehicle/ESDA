<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    
    <xacro:property name="width" value="0.11"/>
    <xacro:property name="height" value="0.017"/>
    
    <xacro:property name="x" value="-0.0223"/>
    <xacro:property name="y" value="0.0563"/>
    <xacro:property name="z" value="-0.0804"/>

    <!-- verify that the X and Y dimensions are placed in the right axis
    -->
    <link name="swiftnav-gnss">
        <visual>
            <geometry>
                <box size="${width} ${width} ${height}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        
        <collision>
            <geometry>
                <box size="${width} ${width} ${height}"/>
            </geometry>
            <material name="orange"/>
        </collision>
        
        <xacro:inertial_box mass="0" x="${width}" y="${width}" z="${height}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    
    <joint name="swiftnav_joint" type="fixed">
        <parent link="base_link"/>
        <child link="swiftnav-gnss"/>
        <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
    </joint>

    <!-- Obtained from https://medium.com/@bytesrobotics/a-review-of-the-ros2-urdf-gazebo-sensor-91e947c633d7 -->
    <gazebo reference="swiftnav-gnss">
        <sensor name="gps" type="gps">
            <always_on>true</always_on>
            <update_rate>1.0</update_rate>
            <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
                <ros>
                    <!-- <namespace>/br</namespace> -->
                    <remapping>gps_controller/out:=navsatfix</remapping>
                </ros>
                <frame_name>piksi</frame_name>
            </plugin>
        </sensor>
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="swiftnav-gnss">
        <sensor name="imu" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <imu>
            <angular_velocity>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </z>
            </angular_velocity>
            <linear_acceleration>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </z>
            </linear_acceleration>
            </imu>
            <plugin name="bytes_imu" filename="libgazebo_ros_imu_sensor.so">
                <ros>
                    <remapping>~/out:=imu</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
        </sensor>
    </gazebo>
</robot>
