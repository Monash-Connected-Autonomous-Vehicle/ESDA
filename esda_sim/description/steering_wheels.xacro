<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- STEERING WHEELS 
         Define the 2 front steering wheels that will turn the ESDA.
    -->
    <xacro:property name="steer_wheel_x_off" value="0.235"/>
    <xacro:property name="steer_wheel_y_off" value="0.52297"/>
    <xacro:property name="steer_wheel_z_off" value="0.208"/>
    
    <!-- Define the wheels that spin -->
    <link name="right_steering_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </visual>
        
        <collision>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </collision>
        
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_len}" radius="${wheel_rad}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    
    <link name="left_steering_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </visual>
        
        <collision>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </collision>
        
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_len}" radius="${wheel_rad}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    
    <!-- Define the component that will turn around z-axis which the wheels will attach to -->
    <link name="right_steering_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </visual>
        
        <collision>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </collision>
        
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_len}" radius="${wheel_rad}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    
    <link name="left_steering_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </visual>
        
        <collision>
            <geometry>
                <cylinder radius="${wheel_rad}" length="${wheel_len}"/>
            </geometry>
            <material name="light_grey"/>
        </collision>
        
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_len}" radius="${wheel_rad}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>

    </link>
    
    <!-- Note that in the following joint definitions, when defining the
         axis of rotation, it refers to the links axis, not base_link as
         the wheels have been rotated 90deg for correct positioning.
         
         The comments below however, are in reference to the base_link axis.
         
         THe approach taken was sources from https://robotics.stackexchange.com/a/106022
    -->
    <!-- The steer_link will rotate around z-axis and because the wheels are jointed to this, their
         position is relative to this and thus will follow the turn of the steer_link.
    -->
    <joint name="right_steer_joint" type="revolute">
        <parent link="base_link"/>
        <child link="right_steering_link"/>
        <origin xyz="${steer_wheel_x_off} -${steer_wheel_y_off} -${steer_wheel_z_off}" rpy="${pi/2} 0 0 "/>
        <axis xyz="0 -1 0"/>        
        <limit effort="100" lower="-0.41" upper="0.41" velocity="1"/>
    </joint>
    
    <joint name="left_steer_joint" type="revolute">
        <parent link="base_link"/>
        <child link="left_steering_link"/>
        <origin xyz="${steer_wheel_x_off} ${steer_wheel_y_off} -${steer_wheel_z_off}" rpy="-${pi/2} 0 0 "/>
        <axis xyz="0 1 0"/>        
        <limit effort="100" lower="-0.41" upper="0.41" velocity="1"/>
    </joint>    
    
    <!-- Define the wheels rotation around the x axis so they can roll forward -->
    <joint name="right_wheel_axle_joint" type="continuous">
        <parent link="right_steering_link"/>
        <child link="right_steering_wheel"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 0 -1"/>
    </joint>
    
    <joint name="left_wheel_axle_joint" type="continuous">
        <parent link="left_steering_link"/>
        <child link="left_steering_wheel"/>
        <origin xyz="0 0 0" rpy="0 0 0 "/>
        <axis xyz="0 0 1"/>
    </joint>

</robot>
